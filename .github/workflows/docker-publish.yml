name: Build and Publish Docker Image with Attestation

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'home'
        type: choice
        options:
          - local
          - home

env:
  IMAGE_NAME: docker-local/sigs

jobs:
  build-and-push:
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
      packages: write
      attestations: write  # Required for attestation
      id-token: write      # Added for OIDC token access

    steps:
      - name: Setup JFrog CLI
        id: setup-jfrog-cli
        uses: jfrog/setup-jfrog-cli@v4.5.12
        env:
            JF_URL: ${{ vars.JF_URL }} 
        with:
          version: 2.78.2
          oidc-provider-name: setup-jfrog-cli
          custom-server-id: github-actions

      - name: Check JFrog CLI
        run: |
          jf config show
          jf rt ping

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ steps.setup-jfrog-cli.outputs.oidc-user }}
          password: ${{ steps.setup-jfrog-cli.outputs.oidc-token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config: buildkitd.toml

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
            type=raw,value=${{ env.IMAGE_TAG }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ env.BUILD_ARGS }}
          # Enable provenance and SBOM generation
          provenance: true
          sbom: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ vars.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_TAG }}list.manifest.json
          subject-digest: ${{ steps.build-and-push.outputs.digest }}

      - name: Deploy notification
        run: |
          echo "Successfully built and pushed Docker image for ${{ github.event.inputs.environment }} environment"
          echo "Image: ${{ vars.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
